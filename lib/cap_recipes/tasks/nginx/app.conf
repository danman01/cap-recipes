server {
  listen  80;
  listen  443 default ssl;

  ssl_certificate      <%=nginx_root%>/conf/https.crt;
  ssl_certificate_key  <%=nginx_root%>/conf/https.key;

  ssl_session_timeout  10m;
  ssl_session_cache    shared:SSL:10m;

  ssl_protocols  SSLv2 SSLv3 TLSv1;
  ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
  ssl_prefer_server_ciphers   on;
  client_max_body_size 4M;

  location / {
    proxy_pass         http://<%=application%>;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # On your backend, you can pull the request header x-exampledotcom-rid, and log it or tie it to whatever you may like.
    # This makes it really easy to correlate backend exceptions or instrumentation with frontend http request logs.
    # Goes well with the new Rails 3.2/master support for X-Request-Id.
    proxy_set_header X-Request-Id $request_id;
    proxy_set_header Host $http_host;
    proxy_redirect   off;

    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_buffering on;
    proxy_connect_timeout 15;
    proxy_intercept_errors on;
    }
}

upstream <%=application%> {
<% find_servers(:roles => :app).each do |app| %>
  server <%=app.host%>;
<% end %>
}
